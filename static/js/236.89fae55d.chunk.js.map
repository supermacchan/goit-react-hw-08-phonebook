{"version":3,"file":"static/js/236.89fae55d.chunk.js","mappings":"+MACA,GAAgB,MAAQ,4BAA4B,aAAe,mCAAmC,KAAO,4B,SCIhGA,EAAe,WACxB,IAAMC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,GAEzB,OACI,iBAAKC,UAAWC,EAAAA,QAAhB,WACI,gBAAID,UAAWC,EAAAA,MAAf,sBAAoCJ,EAApC,QACA,eAAGG,UAAWC,EAAAA,aAAd,qCAC2B,SAAC,KAAD,CAAMC,GAAI,YAAaF,UAAWC,EAAAA,KAAlC,0BAD3B,SAKX,C,kKCfD,EAAwB,gCAAxB,EAA2E,2CAA3E,EAA6H,+BAA7H,EAAuK,mCAAvK,EAAkN,gCAAlN,EAAyP,+BAAzP,EAAgS,gCAAhS,EAA4U,oC,SCQ/TE,EAAmB,WAC5B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOT,EAAP,KAAaU,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAgCH,EAAAA,EAAAA,UAAS,IAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACjB,MAAwBA,EAAMC,cAAtBjB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,MACd,OAAQlB,GACJ,IAAK,OACD,OAAOU,EAAQQ,GACnB,IAAK,QACD,OAAON,EAASM,GACpB,IAAK,WACD,OAAOJ,EAAYI,GACvB,QACI,OAEX,EAQKC,EAAQ,WACVT,EAAQ,IACRE,EAAS,IACTE,EAAY,GACf,EAED,OACI,iCACI,eAAIX,UAAWC,EAAf,sDACA,kBAAMD,UAAWC,EAAsBgB,SAf1B,SAAAJ,GACjBA,EAAMK,iBACNd,EAASe,EAAAA,EAAAA,SAAwB,CAAEtB,KAAAA,EAAMW,MAAAA,EAAOE,SAAAA,KAChDM,GACH,EAWO,WACI,gBAAIhB,UAAWC,EAAf,WACI,gBAAID,UAAWC,EAAf,WACI,mBACImB,QAAQ,cACRpB,UAAWC,EAFf,WAIG,SAAC,MAAD,CAAkBD,UAAWC,IAJhC,YAMA,kBACIoB,KAAK,OACLxB,KAAK,OACLyB,GAAG,cACHC,UAAQ,EACRvB,UAAWC,EACXc,MAAOlB,EACP2B,SAAUZ,QAGlB,gBAAIZ,UAAWC,EAAf,WACI,mBACImB,QAAQ,eACRpB,UAAWC,EAFf,WAII,SAAC,MAAD,CAAeD,UAAWC,IAJ9B,aAMA,kBACIoB,KAAK,QACLxB,KAAK,QACLyB,GAAG,eACHC,UAAQ,EACRvB,UAAWC,EACXc,MAAOP,EACPgB,SAAUZ,QAGlB,gBAAIZ,UAAWC,EAAf,WACI,mBACImB,QAAQ,kBACRpB,UAAWC,EAFf,WAII,SAAC,MAAD,CAAoBD,UAAWC,IAJnC,gBAMA,kBACIoB,KAAK,WACLxB,KAAK,WACLyB,GAAG,kBACHC,UAAQ,EACRvB,UAAWC,EACXc,MAAOL,EACPc,SAAUZ,WAItB,mBAAQS,KAAK,SAASrB,UAAWC,EAAjC,2BAIf,ECrGD,EAA+B,+BCgB/B,EAViB,WACb,IAAMwB,GAAa3B,EAAAA,EAAAA,IAAY4B,EAAAA,GAE/B,OACI,oBAAS1B,UAAWC,EAApB,SACKwB,GAAa,SAAC7B,EAAA,EAAD,KAAmB,SAACO,EAAD,KAG5C,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoginSuccess/LoginSuccess.module.css?4f2a","components/LoginSuccess/LoginSuccess.jsx","webpack://goit-react-hw-08-phonebook/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"LoginSuccess_title__jvy3r\",\"notification\":\"LoginSuccess_notification__1kRXU\",\"link\":\"LoginSuccess_link__2Z2+O\"};","import { useSelector } from 'react-redux';\nimport { selectUserName } from 'redux/auth/authSelectors';\nimport { Link } from 'react-router-dom';\nimport css from './LoginSuccess.module.css';\n\nexport const LoginSuccess = () => {\n    const name = useSelector(selectUserName);\n    \n    return (\n        <div className={css.success}>\n            <h2 className={css.title}>Welcome, {name}!</h2>\n            <p className={css.notification}>\n                You can now go to your <Link to={\"/contacts\"} className={css.link}>Contact list</Link>.\n            </p>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"RegistrationForm_title__iQGD+\",\"registrationForm\":\"RegistrationForm_registrationForm__3yboa\",\"list\":\"RegistrationForm_list__V15S1\",\"listItem\":\"RegistrationForm_listItem__508hL\",\"label\":\"RegistrationForm_label__zrkEU\",\"icon\":\"RegistrationForm_icon__t7Qc+\",\"input\":\"RegistrationForm_input__EgGQR\",\"submitBtn\":\"RegistrationForm_submitBtn__12JmY\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth/authOperations';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { HiOutlineMail } from 'react-icons/hi';\nimport { RiLockPasswordLine } from 'react-icons/ri';\n\nimport css from './RegistrationForm.module.css';\n\nexport const RegistrationForm = () => {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleChange = event => {\n        const { name, value } = event.currentTarget;\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'email':\n                return setEmail(value);\n            case 'password': \n                return setPassword(value);\n            default:\n                return;\n        }\n    };\n    \n    const handleSubmit = event => {\n        event.preventDefault();\n        dispatch(authOperations.register({ name, email, password }));\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setEmail('');\n        setPassword('');\n    };\n\n    return (\n        <>\n            <h2 className={css.title}>Fill out the following form to register</h2>\n            <form className={css.registrationForm} onSubmit={handleSubmit}>\n                <ul className={css.list}>\n                    <li className={css.listItem}>\n                        <label\n                            htmlFor=\"nameInputId\"\n                            className={css.label}\n                        >\n                           <BsFillPersonFill className={css.icon} /> Name\n                        </label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"nameInputId\"\n                            required\n                            className={css.input}\n                            value={name}\n                            onChange={handleChange}\n                        />\n                    </li>\n                    <li className={css.listItem}>\n                        <label\n                            htmlFor=\"emailInputId\"\n                            className={css.label}\n                        >\n                            <HiOutlineMail className={css.icon} /> Email\n                        </label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            id=\"emailInputId\"\n                            required\n                            className={css.input}\n                            value={email}\n                            onChange={handleChange}\n                        />\n                    </li>\n                    <li className={css.listItem}>\n                        <label\n                            htmlFor=\"passwordInputId\"\n                            className={css.label}\n                        >\n                            <RiLockPasswordLine className={css.icon} /> Password\n                        </label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"passwordInputId\"\n                            required\n                            className={css.input}\n                            value={password}\n                            onChange={handleChange}\n                        />\n                    </li>\n                </ul>\n                <button type='submit' className={css.submitBtn}>Register</button>\n            </form>\n        </>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"registration\":\"Register_registration__n5MlX\"};","import { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { LoginSuccess } from 'components/LoginSuccess/LoginSuccess';\nimport { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\n\nimport css from './Register.module.css';\n\nconst Register = () => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    return (\n        <section className={css.registration}>\n            {isLoggedIn ? <LoginSuccess /> : <RegistrationForm/>}\n        </section>\n    )\n};\n\nexport default Register;"],"names":["LoginSuccess","name","useSelector","selectUserName","className","css","to","RegistrationForm","dispatch","useDispatch","useState","setName","email","setEmail","password","setPassword","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","authOperations","htmlFor","type","id","required","onChange","isLoggedIn","selectIsLoggedIn"],"sourceRoot":""}