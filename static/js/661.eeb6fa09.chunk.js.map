{"version":3,"file":"static/js/661.eeb6fa09.chunk.js","mappings":"2LACA,GAAgB,MAAQ,yBAAyB,aAAe,gCAAgC,KAAO,yB,SCE1FA,EAAY,WACrB,OACI,iBAAKC,UAAWC,EAAAA,aAAhB,WACI,eAAID,UAAWC,EAAAA,MAAf,kCACA,cAAGD,UAAWC,EAAAA,aAAd,wEAGA,eAAGD,UAAWC,EAAAA,aAAd,qDAC2C,SAAC,KAAD,CAAMC,GAAI,YAAaF,UAAWC,EAAAA,KAAlC,sBAD3C,aAGA,eAAGD,UAAWC,EAAAA,aAAd,qDAC2C,SAAC,KAAD,CAAMC,GAAI,SAAUF,UAAWC,EAAAA,KAA/B,qBAD3C,cAKX,C,yHClBYE,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,EACtBC,EAAe,SAAAF,GAAK,OAAIA,EAAMG,MAAV,E,oBCAjC,EAAkC,qCAAlC,EAA0F,sCAA1F,EAAuI,0BAAvI,EAAoL,sCAApL,EAA8O,uC,SCOjOC,EAAc,WACvB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GADYC,EAAAA,EAAAA,IAAYZ,GAAtBa,MACoBC,KAAI,SAAAC,GAAO,OAAIA,EAAQR,IAAZ,IACjCS,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACtB,MAAwBA,EAAMC,cAAtBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MACd,OAAQd,GACJ,IAAK,OACDC,EAAQa,GACR,MACJ,IAAK,SACDX,EAAUW,GACV,MACJ,QACI,OAEX,EAkBKC,EAAQ,WACVd,EAAQ,IACRE,EAAU,GACb,EAEG,OACI,kBACIb,UAAWC,EACXyB,SAxBa,SAAAJ,GACrBA,EAAMK,iBACN,IAAMC,EAAa,CACflB,KAAAA,EACAE,OAAAA,GAGDE,EAAce,SAASnB,GACtBoB,EAAAA,GAAAA,MAAA,UAAepB,EAAf,8BAGAS,GAASY,EAAAA,EAAAA,IAAWH,IAExBH,IACH,EAQO,WAII,mBACIO,QAAQ,cACRhC,UAAWC,EAFf,WAII,SAAC,MAAD,CAAgBD,UAAWC,IAJ/B,YAMA,kBACIgC,KAAK,OACLvB,KAAK,OACLwB,QAAQ,yHACRC,MAAM,yIACNC,GAAG,cACHC,UAAQ,EACRC,SAAUjB,EACVrB,UAAWC,EACXuB,MAAOd,KAEX,mBACIsB,QAAQ,aACRhC,UAAWC,EAFf,WAII,SAAC,MAAD,CAAqBD,UAAWC,IAJpC,cAMA,kBACIgC,KAAK,MACLvB,KAAK,SACLwB,QAAQ,yFACRC,MAAM,+FACNC,GAAG,aACHC,UAAQ,EACRC,SAAUjB,EACVrB,UAAWC,EACXuB,MAAOZ,KAEX,mBACIqB,KAAK,SACLjC,UAAWC,EAFf,2BAQX,E,UChGL,EAA8B,4BCIjBsC,EAAS,WAClB,IAAMhC,GAASQ,EAAAA,EAAAA,IAAYT,GACrBa,GAAWC,EAAAA,EAAAA,MAMjB,OACI,4BACI,kBACQa,KAAK,OACLT,MAAOjB,EACP+B,SATK,SAAAhB,GACjBH,GAASqB,EAAAA,EAAAA,GAAelB,EAAMC,cAAcC,OAC/C,EAQexB,UAAWC,EACXwC,YAAY,oBAI/B,E,oBCvBD,EAAiC,oCAAjC,EAA6E,2BAA7E,EAAqH,gCCArH,EAAqC,4CAArC,EAAoG,0CCIvFC,EAAkB,SAAC,GAAuC,IAAD,IAApCxB,QAAWkB,EAAyB,EAAzBA,GAAI1B,EAAqB,EAArBA,KAAME,EAAe,EAAfA,OAC7CO,GAAWC,EAAAA,EAAAA,MAMjB,OACI,gBAAIpB,UAAWC,EAAf,WACI,4BAAOS,EAAP,KAAeE,MACX,mBACIqB,KAAK,SACLjC,UAAWC,EACX0C,QAAS,kBAVD,SAACP,GACrBjB,GAASyB,EAAAA,EAAAA,IAAcR,GAC1B,CAQ8BS,CAAgBT,EAAtB,EAHb,sBASf,ECbYU,EAAc,WACvB,OAAoC/B,EAAAA,EAAAA,IAAYZ,GAAxCa,EAAR,EAAQA,MAAO+B,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,MACpBzC,GAASQ,EAAAA,EAAAA,IAAYT,GACrBa,GAAWC,EAAAA,EAAAA,MAEX6B,EAAmB1C,EAAO2C,cAC1BC,EAAmBnC,EAAMT,QAAO,SAAAW,GAAO,OAAIA,EAAQR,KAAKwC,cAAcrB,SAASoB,EAAxC,IAM7C,OAJAG,EAAAA,EAAAA,YAAU,WACNjC,GAASkC,EAAAA,EAAAA,MACZ,GAAE,CAAClC,KAGA,gBAAInB,UAAWC,EAAf,UACK8C,IAAa,SAACO,EAAA,EAAD,IACbN,IAAS,iBAAKhD,UAAWC,EAAhB,WAA2B,SAAC,MAAD,CAAgBD,UAAWC,IAAtD,IAA0E+C,KACnFG,EAAiBI,OAAS,GACvBJ,EAAiBlC,KAAI,SAAAC,GAAO,OAC5B,SAACwB,EAAD,CACIxB,QAASA,GACJA,EAAQkB,GAHW,MAQ3C,E,UCnCD,GAAgB,UAAY,4BAA4B,MAAQ,yBC0BhE,EAnBiB,WACb,IAAMoB,GAAazC,EAAAA,EAAAA,IAAY0C,EAAAA,GAE/B,OACI,oBAASzD,UAAWC,EAAAA,UAApB,SACKuD,GACD,iCACI,SAAChD,EAAD,KACA,iBAAKR,UAAWC,EAAAA,YAAhB,WACI,eAAID,UAAWC,EAAAA,MAAf,4BACA,SAACsC,EAAD,KACA,SAACO,EAAD,WAGN,SAAC/C,EAAA,EAAD,KAGb,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoggedOut/LoggedOut.module.css?792c","components/LoggedOut/LoggedOut.jsx","redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactListItem.module.css?16c0","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"LoggedOut_title__668wH\",\"notification\":\"LoggedOut_notification__bxP1z\",\"link\":\"LoggedOut_link__4l8SF\"};","import { Link } from 'react-router-dom';\nimport css from './LoggedOut.module.css';\n\nexport const LoggedOut = () => {\n    return (\n        <div className={css.unauthorized}>\n            <h2 className={css.title}>Hi there, stranger!</h2>\n            <p className={css.notification}>\n                You need to be signed in to be able to use the Phonebook.\n            </p>\n            <p className={css.notification}>\n                If you do not have an account, you can <Link to={\"/register\"} className={css.link}>register</Link> here.\n            </p>\n            <p className={css.notification}>\n                If you already have an account, please <Link to={\"/login\"} className={css.link}>sign in</Link> here.\n            </p>\n        </div>\n    )\n}","export const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"phonebook__form\":\"ContactForm_phonebook__form__XB6ku\",\"phonebook__label\":\"ContactForm_phonebook__label__PN-+-\",\"icon\":\"ContactForm_icon__wGMYw\",\"phonebook__input\":\"ContactForm_phonebook__input__efLHZ\",\"phonebook__button\":\"ContactForm_phonebook__button__639X2\"};","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/operations\";\nimport { selectContacts } from \"redux/selectors\";\nimport { BsPersonCircle, BsFillTelephoneFill } from \"react-icons/bs\";\nimport { toast } from 'react-toastify';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const { items } = useSelector(selectContacts);\n    const contactsNames = items.map(contact => contact.name);\n    const dispatch = useDispatch();\n\n    const handleInputChange = event => {\n        const { name, value } = event.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        };\n    };\n\n    const handleFormSubmit = event => {\n        event.preventDefault();\n        const newContact = {\n            name,\n            number,\n        };\n        \n        if(contactsNames.includes(name)) {\n            toast.error(`${name} is already in contacts.`);\n            return;\n        } else {\n            dispatch(addContact(newContact));\n        }\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n        return (\n            <form\n                className={css.phonebook__form}\n                onSubmit={handleFormSubmit}\n            >\n                <label\n                    htmlFor=\"nameInputId\"\n                    className={css.phonebook__label}\n                >\n                    <BsPersonCircle className={css.icon} /> Name\n                </label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    id=\"nameInputId\"\n                    required\n                    onChange={handleInputChange}\n                    className={css.phonebook__input}\n                    value={name}\n                />\n                <label\n                    htmlFor=\"telInputId\"\n                    className={css.phonebook__label}\n                >\n                    <BsFillTelephoneFill className={css.icon} /> Number\n                </label>\n                < input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    id=\"telInputId\"\n                    required\n                    onChange={handleInputChange}\n                    className={css.phonebook__input}\n                    value={number}\n                />\n                <button\n                    type=\"submit\"\n                    className={css.phonebook__button}\n                >\n                    Add Contact\n                </button>\n            </form>\n        )\n    };","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { selectFilter } from \"redux/selectors\";\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const changeFilter = event => {\n        dispatch(filterContacts(event.currentTarget.value));\n    };\n\n    return (\n        <label>\n            <input\n                    type=\"text\"\n                    value={filter}\n                    onChange={changeFilter}\n                    className={css.filterInput}\n                    placeholder='Filter by name'\n            />\n        </label>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contacts__list\":\"ContactList_contacts__list__hSN0M\",\"error\":\"ContactList_error__uCB2f\",\"error_icon\":\"ContactList_error_icon__Dx7D1\"};","// extracted by mini-css-extract-plugin\nexport default {\"contacts__listItem\":\"ContactListItem_contacts__listItem__LyXHe\",\"contacts__delBtn\":\"ContactListItem_contacts__delBtn__+cklu\"};","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/operations\";\nimport PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css';\n\nexport const ContactListItem = ({ contact: { id, name, number } }) => {\n    const dispatch = useDispatch();\n\n    const onDeleteContact = (id) => {\n        dispatch(deleteContact(id));\n    }\n\n    return (\n        <li className={css.contacts__listItem} >\n            <span>{name}: {number}</span>\n                <button\n                    type=\"button\"\n                    className={css.contacts__delBtn}\n                    onClick={() => onDeleteContact(id)}\n                >\n                    Delete\n                </button>\n        </li> \n    );\n};\n\nContactListItem.propTypes = {\n    contact: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }).isRequired,\n};","import { Loader } from \"components/Loader/Loader\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"redux/operations\";\nimport { selectContacts, selectFilter } from \"redux/selectors\";\nimport { MdOutlineError } from \"react-icons/md\";\n\nimport css from './ContactList.module.css';\n\nimport { ContactListItem } from \"./ContactListItem\";\n\nexport const ContactList = () => {\n    const { items, isLoading, error } = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = items.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <ul className={css.contacts__list}>\n            {isLoading && <Loader />}\n            {error && <div className={css.error}><MdOutlineError className={css.error_icon} /> {error}</div>}\n            {filteredContacts.length > 0 &&\n                filteredContacts.map(contact =>\n                <ContactListItem\n                    contact={contact}\n                    key={contact.id}\n                />\n            )}\n        </ul>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Contacts_phonebook__G9bQK\",\"title\":\"Contacts_title__LxdN4\"};","import { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { ContactForm } from \"../../components/ContactForm/ContactForm\";\nimport { Filter } from \"../../components/Filter/Filter\";\nimport { ContactList } from \"../../components/ContactList/ContactList\";\nimport { LoggedOut } from 'components/LoggedOut/LoggedOut';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    return (\n        <section className={css.phonebook}>\n            {isLoggedIn ? \n            <>\n                <ContactForm />\n                <div className={css.contactList}>\n                    <h2 className={css.title}>Your Contacts</h2>\n                    <Filter />\n                    <ContactList />\n                </div>\n            </>\n            : <LoggedOut />}\n        </section>\n    )\n};\n\nexport default Contacts;"],"names":["LoggedOut","className","css","to","selectContacts","state","contacts","selectFilter","filter","ContactForm","useState","name","setName","number","setNumber","contactsNames","useSelector","items","map","contact","dispatch","useDispatch","handleInputChange","event","currentTarget","value","reset","onSubmit","preventDefault","newContact","includes","toast","addContact","htmlFor","type","pattern","title","id","required","onChange","Filter","filterContacts","placeholder","ContactListItem","onClick","deleteContact","onDeleteContact","ContactList","isLoading","error","normalizedFilter","toLowerCase","filteredContacts","useEffect","fetchContacts","Loader","length","isLoggedIn","selectIsLoggedIn"],"sourceRoot":""}