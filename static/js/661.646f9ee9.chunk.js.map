{"version":3,"file":"static/js/661.646f9ee9.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactListItem.module.css?16c0","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"phonebook__form\":\"ContactForm_phonebook__form__XB6ku\",\"phonebook__label\":\"ContactForm_phonebook__label__PN-+-\",\"icon\":\"ContactForm_icon__wGMYw\",\"phonebook__input\":\"ContactForm_phonebook__input__efLHZ\",\"phonebook__button\":\"ContactForm_phonebook__button__639X2\"};","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/operations\";\nimport { selectContacts } from \"redux/selectors\";\nimport { BsPersonCircle, BsFillTelephoneFill } from \"react-icons/bs\";\nimport { toast } from 'react-toastify';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const { items } = useSelector(selectContacts);\n    const contactsNames = items.map(contact => contact.name);\n    const dispatch = useDispatch();\n\n    const handleInputChange = event => {\n        const { name, value } = event.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        };\n    };\n\n    const handleFormSubmit = event => {\n        event.preventDefault();\n        const newContact = {\n            name,\n            number,\n        };\n        \n        if(contactsNames.includes(name)) {\n            toast.error(`${name} is already in contacts.`);\n            return;\n        } else {\n            dispatch(addContact(newContact));\n        }\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n        return (\n            <form\n                className={css.phonebook__form}\n                onSubmit={handleFormSubmit}\n            >\n                <label\n                    htmlFor=\"nameInputId\"\n                    className={css.phonebook__label}\n                >\n                    <BsPersonCircle className={css.icon} /> Name\n                </label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    id=\"nameInputId\"\n                    required\n                    onChange={handleInputChange}\n                    className={css.phonebook__input}\n                    value={name}\n                />\n                <label\n                    htmlFor=\"telInputId\"\n                    className={css.phonebook__label}\n                >\n                    <BsFillTelephoneFill className={css.icon} /> Number\n                </label>\n                < input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    id=\"telInputId\"\n                    required\n                    onChange={handleInputChange}\n                    className={css.phonebook__input}\n                    value={number}\n                />\n                <button\n                    type=\"submit\"\n                    className={css.phonebook__button}\n                >\n                    Add Contact\n                </button>\n            </form>\n        )\n    };","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { selectFilter } from \"redux/selectors\";\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const changeFilter = event => {\n        dispatch(filterContacts(event.currentTarget.value));\n    };\n\n    return (\n        <label>\n            <input\n                    type=\"text\"\n                    value={filter}\n                    onChange={changeFilter}\n                    className={css.filterInput}\n            />\n        </label>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contacts__list\":\"ContactList_contacts__list__hSN0M\",\"error\":\"ContactList_error__uCB2f\",\"error_icon\":\"ContactList_error_icon__Dx7D1\"};","// extracted by mini-css-extract-plugin\nexport default {\"contacts__listItem\":\"ContactListItem_contacts__listItem__LyXHe\",\"contacts__delBtn\":\"ContactListItem_contacts__delBtn__+cklu\"};","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/operations\";\nimport PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css';\n\nexport const ContactListItem = ({ contact: { id, name, number } }) => {\n    const dispatch = useDispatch();\n\n    const onDeleteContact = (id) => {\n        dispatch(deleteContact(id));\n    }\n\n    return (\n        <li className={css.contacts__listItem} >\n            <span>{name}: {number}</span>\n                <button\n                    type=\"button\"\n                    className={css.contacts__delBtn}\n                    onClick={() => onDeleteContact(id)}\n                >\n                    Delete\n                </button>\n        </li> \n    );\n};\n\nContactListItem.propTypes = {\n    contact: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }).isRequired,\n};","import { Loader } from \"components/Loader/Loader\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"redux/operations\";\nimport { selectContacts, selectFilter } from \"redux/selectors\";\nimport { MdOutlineError } from \"react-icons/md\";\n\nimport css from './ContactList.module.css';\n\nimport { ContactListItem } from \"./ContactListItem\";\n\nexport const ContactList = () => {\n    const { items, isLoading, error } = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = items.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <ul className={css.contacts__list}>\n            {isLoading && <Loader />}\n            {error && <div className={css.error}><MdOutlineError className={css.error_icon} /> {error}</div>}\n            {filteredContacts.length > 0 &&\n                filteredContacts.map(contact =>\n                <ContactListItem\n                    contact={contact}\n                    key={contact.id}\n                />\n            )}\n        </ul>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook__title\":\"Contacts_phonebook__title__ylLCu\",\"contacts__title\":\"Contacts_contacts__title__ZEWHT\"};","import { ContactForm } from \"../../components/ContactForm/ContactForm\";\nimport { Filter } from \"../../components/Filter/Filter\";\nimport { ContactList } from \"../../components/ContactList/ContactList\";\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n    return (\n        <>\n            <h1 className={css.phonebook__title}>Phonebook</h1>\n            <ContactForm />\n\n            <h2 className={css.contacts__title}>Contacts</h2>\n            <Filter />\n            <ContactList />\n        </>\n    )\n};\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","selectFilter","filter","ContactForm","useState","name","setName","number","setNumber","contactsNames","useSelector","items","map","contact","dispatch","useDispatch","handleInputChange","event","currentTarget","value","reset","className","css","onSubmit","preventDefault","newContact","includes","toast","addContact","htmlFor","type","pattern","title","id","required","onChange","Filter","filterContacts","ContactListItem","onClick","deleteContact","onDeleteContact","ContactList","isLoading","error","normalizedFilter","toLowerCase","filteredContacts","useEffect","fetchContacts","Loader","length"],"sourceRoot":""}