{"version":3,"file":"static/js/199.a69fd168.chunk.js","mappings":"+MACA,GAAgB,MAAQ,4BAA4B,aAAe,mCAAmC,KAAO,4B,SCIhGA,EAAe,WACxB,IAAMC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,GAEzB,OACI,iBAAKC,UAAWC,EAAAA,QAAhB,WACI,gBAAID,UAAWC,EAAAA,MAAf,sBAAoCJ,EAApC,QACA,eAAGG,UAAWC,EAAAA,aAAd,qCAC2B,SAAC,KAAD,CAAMC,GAAI,YAAaF,UAAWC,EAAAA,KAAlC,0BAD3B,SAKX,C,kKCfD,EAA+B,+BAA/B,EAAsE,wBAAtE,EAAiH,mCAAjH,EAA2J,uBAA3J,EAA6L,2BAA7L,EAAgO,wBAAhO,EAA+P,uBAA/P,EAA8R,wBAA9R,EAAkU,4B,SC4GlU,EAlGiB,WACb,IAAME,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOR,EAAP,KAAaS,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAgCH,EAAAA,EAAAA,UAAS,IAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KACMC,GAAab,EAAAA,EAAAA,IAAYc,EAAAA,GAEzBC,EAAe,SAAAC,GACjB,MAAwBA,EAAMC,cAAtBlB,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,MACd,OAAQnB,GACJ,IAAK,OACD,OAAOS,EAAQU,GACnB,IAAK,QACD,OAAOR,EAASQ,GACpB,IAAK,WACD,OAAON,EAAYM,GACvB,QACI,OAEX,EAQKC,EAAQ,WACVX,EAAQ,IACRE,EAAS,IACTE,EAAY,GACf,EAED,OACI,oBAASV,UAAWC,EAApB,SACKU,GAAa,SAACf,EAAA,EAAD,KAAmB,iCACjC,eAAII,UAAWC,EAAf,sDACA,kBAAMD,UAAWC,EAAsBiB,SAhB1B,SAAAJ,GACjBA,EAAMK,iBACNhB,EAASiB,EAAAA,EAAAA,SAAwB,CAAEvB,KAAAA,EAAMU,MAAAA,EAAOE,SAAAA,KAChDQ,GACH,EAYO,WACI,gBAAIjB,UAAWC,EAAf,WACI,gBAAID,UAAWC,EAAf,WACI,mBACIoB,QAAQ,cACRrB,UAAWC,EAFf,WAIG,SAAC,MAAD,CAAkBD,UAAWC,IAJhC,YAMA,kBACIqB,KAAK,OACLzB,KAAK,OACL0B,GAAG,cACHC,UAAQ,EACRxB,UAAWC,EACXe,MAAOnB,EACP4B,SAAUZ,QAGlB,gBAAIb,UAAWC,EAAf,WACI,mBACIoB,QAAQ,eACRrB,UAAWC,EAFf,WAII,SAAC,MAAD,CAAeD,UAAWC,IAJ9B,aAMA,kBACIqB,KAAK,QACLzB,KAAK,QACL0B,GAAG,eACHC,UAAQ,EACRxB,UAAWC,EACXe,MAAOT,EACPkB,SAAUZ,QAGlB,gBAAIb,UAAWC,EAAf,WACI,mBACIoB,QAAQ,kBACRrB,UAAWC,EAFf,WAII,SAAC,MAAD,CAAoBD,UAAWC,IAJnC,gBAMA,kBACIqB,KAAK,WACLzB,KAAK,WACL0B,GAAG,kBACHC,UAAQ,EACRxB,UAAWC,EACXe,MAAOP,EACPgB,SAAUZ,WAItB,mBAAQS,KAAK,SAAStB,UAAWC,EAAjC,6BAKf,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoginSuccess/LoginSuccess.module.css?4f2a","components/LoginSuccess/LoginSuccess.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"LoginSuccess_title__jvy3r\",\"notification\":\"LoginSuccess_notification__1kRXU\",\"link\":\"LoginSuccess_link__2Z2+O\"};","import { useSelector } from 'react-redux';\nimport { selectUserName } from 'redux/auth/authSelectors';\nimport { Link } from 'react-router-dom';\nimport css from './LoginSuccess.module.css';\n\nexport const LoginSuccess = () => {\n    const name = useSelector(selectUserName);\n    \n    return (\n        <div className={css.success}>\n            <h2 className={css.title}>Welcome, {name}!</h2>\n            <p className={css.notification}>\n                You can now go to your <Link to={\"/contacts\"} className={css.link}>Contact list</Link>.\n            </p>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"registration\":\"Register_registration__n5MlX\",\"title\":\"Register_title__4r11G\",\"registrationForm\":\"Register_registrationForm__kZCL0\",\"list\":\"Register_list__znz+A\",\"listItem\":\"Register_listItem__tj1hK\",\"label\":\"Register_label__KQhFe\",\"icon\":\"Register_icon__CdufD\",\"input\":\"Register_input__d+3tu\",\"submitBtn\":\"Register_submitBtn__m-SjH\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authOperations } from 'redux/auth/authOperations';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { LoginSuccess } from 'components/LoginSuccess/LoginSuccess';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { HiOutlineMail } from 'react-icons/hi';\nimport { RiLockPasswordLine } from 'react-icons/ri';\n\nimport css from './Register.module.css';\n\nconst Register = () => {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    const handleChange = event => {\n        const { name, value } = event.currentTarget;\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'email':\n                return setEmail(value);\n            case 'password': \n                return setPassword(value);\n            default:\n                return;\n        }\n    };\n    \n    const handleSubmit = event => {\n        event.preventDefault();\n        dispatch(authOperations.register({ name, email, password }));\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setEmail('');\n        setPassword('');\n    };\n\n    return (\n        <section className={css.registration}>\n            {isLoggedIn ? <LoginSuccess /> : <>\n            <h2 className={css.title}>Fill out the following form to register</h2>\n            <form className={css.registrationForm} onSubmit={handleSubmit}>\n                <ul className={css.list}>\n                    <li className={css.listItem}>\n                        <label\n                            htmlFor=\"nameInputId\"\n                            className={css.label}\n                        >\n                           <BsFillPersonFill className={css.icon} /> Name\n                        </label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"nameInputId\"\n                            required\n                            className={css.input}\n                            value={name}\n                            onChange={handleChange}\n                        />\n                    </li>\n                    <li className={css.listItem}>\n                        <label\n                            htmlFor=\"emailInputId\"\n                            className={css.label}\n                        >\n                            <HiOutlineMail className={css.icon} /> Email\n                        </label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            id=\"emailInputId\"\n                            required\n                            className={css.input}\n                            value={email}\n                            onChange={handleChange}\n                        />\n                    </li>\n                    <li className={css.listItem}>\n                        <label\n                            htmlFor=\"passwordInputId\"\n                            className={css.label}\n                        >\n                            <RiLockPasswordLine className={css.icon} /> Password\n                        </label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"passwordInputId\"\n                            required\n                            className={css.input}\n                            value={password}\n                            onChange={handleChange}\n                        />\n                    </li>\n                </ul>\n                <button type='submit' className={css.submitBtn}>Register</button>\n            </form>\n            </>}\n        </section>\n    )\n};\n\nexport default Register;"],"names":["LoginSuccess","name","useSelector","selectUserName","className","css","to","dispatch","useDispatch","useState","setName","email","setEmail","password","setPassword","isLoggedIn","selectIsLoggedIn","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","authOperations","htmlFor","type","id","required","onChange"],"sourceRoot":""}